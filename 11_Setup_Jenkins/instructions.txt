
Workshop 11 : Create your own jenkins server

1. ssh to jenkins server
# ssh -i pem-files/automate-workshop.pem ubuntu@<your-jenkins-server-ip>

2. Create user 1001 with uid = 1001
# sudo useradd -u 1001 --no-create-home 1001
# sudo mkdir -p /bitnami/jenkins && sudo chown -Rf 1001:1001 /bitnami

3. Install docker on ubuntu
# sudo apt-get update
# sudo apt-get install -y curl
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# sudo apt-get update
# apt-cache policy docker-ce
# sudo apt-get install -y docker-ce
# sudo systemctl status docker
docker.service - Docker Application Container Engine
   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)
   Active: active (running) since Tue 2017-10-24 02:46:33 UTC; 4s ago
<press q to quit>

4. Add ubuntu and 1001 to docker group
# sudo usermod -a -G docker ubuntu
# sudo usermod -a -G docker 1001

5. Create alias
# vim ~/.bashrc
// Put lines belows to the end of ~/.bashrc notice that you can replace my_username and my_password to your choice
alias pull-jenkins='docker pull 3dsinteractive/jenkins:2.81'
alias start-jenkins='docker run --rm --name jenkins -d -p 80:8080 -e JENKINS_USERNAME=my_username -e JENKINS_PASSWORD=my_password -v /bitnami/jenkins:/bitnami/jenkins -v /bitnami/nginx:/bitnami/nginx -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker 3dsinteractive/jenkins:2.81'
alias stop-jenkins='docker stop jenkins'
alias pull-composer='docker pull 3dsinteractive/composer:7.1'
alias pull-nginx='docker pull 3dsinteractive/nginx:1.12'
alias start-nginx='docker run --rm --name sourcemaster -d -p 8080:8080 -v /bitnami/jenkins/sourcemaster:/app 3dsinteractive/nginx:1.12'
alias stop-nginx='docker stop sourcemaster'
alias docker-rmi-dangling='docker rmi $(docker images -f "dangling=true" -q)'

6. Exit and re-connect to server to allow docker to run without sudo
# exit
# ssh -i pem-files/automate-workshop.pem ubuntu@<your-server-ip>

7. Pull all required images
# pull-jenkins
# pull-composer
# pull-nginx

8. Start jenkins and nginx
# start-jenkins
# sudo mkdir -p /bitnami/jenkins/sourcemaster
# echo 'Source master' | sudo tee /bitnami/jenkins/sourcemaster/index.html
# sudo chown -Rf 1001:1001 /bitnami/jenkins/sourcemaster
# start-nginx

9. Start jenkins and access through browser
# start-jenkins
# docker ps
<enter jenkins ip address into your browser address bar>
<enter username and password from the previous step>

10. Create 1st job to test if docker+jenkins work
- 6.1 Create a new job
- 6.2 Choose Freestyle project and name project "test-docker"
- 6.3 Press OK
- 6.4 Under Build section, Add build step -> Execute Shell
- 6.5 Enter => sudo docker run --rm hello-world
- 6.6 Save
- 6.7 Build now

11. Open sourcemaster url
<enter jenkins ip address into your browser address bar with port 8080>
// You will see forbidden page
